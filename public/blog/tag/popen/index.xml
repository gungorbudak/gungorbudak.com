<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>popen on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/popen/</link>
    <description>Recent content in popen on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 30 Aug 2015 06:13:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/popen/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Way of Python&#39;s subprocess.Popen with a Timeout Option</title>
      <link>https://www.gungorbudak.com/blog/2015/08/30/simple-way-of-pythons-subprocesspopen/</link>
      <pubDate>Sun, 30 Aug 2015 06:13:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2015/08/30/simple-way-of-pythons-subprocesspopen/</guid>
      <description>subprocess module in Python provides us a variety of methods to start a process from a Python script. We may use these methods to run an external commands / programs, collect their output and manage them. An example use of it might be as following:
from subprocess import Popen, PIPE p = Popen([&amp;#39;ls&amp;#39;, &amp;#39;-l&amp;#39;], stdout=PIPE, stderr=PIPE) stdout, stderr = p.communicate() print stdout, stderr These lines can be used to run ls -l command in Terminal and collect the output (standard output and standard error) in stdout and stderr variables using communicate method defined in the process.</description>
    </item>
    
  </channel>
</rss>
