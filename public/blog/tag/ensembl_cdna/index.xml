<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ensembl_cdna on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/ensembl_cdna/</link>
    <description>Recent content in ensembl_cdna on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Jul 2012 04:17:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/ensembl_cdna/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Veritabanina Gore Bir Komutun Calisma Suresi - CPU Runtime</title>
      <link>https://www.gungorbudak.com/blog/2012/07/16/veritabanina-gore-bir-komutun-calisma/</link>
      <pubDate>Mon, 16 Jul 2012 04:17:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/16/veritabanina-gore-bir-komutun-calisma/</guid>
      <description>Calisilan dosyalar, veritabanları buyuk olunca ve yeterince bilgisayar gucune sahip olmayınca, her seyden once olcmemiz gereken nasil en etkili ve kisa surede sonucu alabiliyor olmamizdir.
Özellikle projemde, farkli veritabanları ve farkli parametreler kullanarak, bunları arastiriyorum.
Şimdilik dort veritabani deniyorum, bunlar: nrnuc, ensembl_cdna, honest ve refseq_genomic. Ayrica, bunu farkli iki kelime uzunluğuna gore de yapacagim. Kelime uzunluğu (word size) MegaBLAST&amp;rsquo;in ararken tam olarak eslestirecegi baz cifti sayisi. Yani elimde 151 baz ciftine sahip bir dizilim varsa, ve eger kelime uzunluğu 50 olarak belirlenmişse, bu 151 baz cifti icinden herhangi bir yerden baslayan ama arka arkaya en az 50 bazin dizilendiği kisimlar aranacak.</description>
    </item>
    
    <item>
      <title>Veritabani Secimi</title>
      <link>https://www.gungorbudak.com/blog/2012/07/13/veritabani-secimi/</link>
      <pubDate>Fri, 13 Jul 2012 09:29:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/13/veritabani-secimi/</guid>
      <description>Bu projedeki amacim olasi kirleten organizmalari (kontaminantlari) bulmak. Dolayisiyla genis bir veritabanina ihtiyacim var. Ancak veritabanini genis tutmak boyle bir avantaj sagliyorken, her dizi icin o veritabaninda arama yapmak oldukca fazla bilgisayar gucu ve zaman gerektiriyor. Bu yuzden projemi gelistirirken, cesitli veritabanlarini da inceliyorum. Ve ayrica bunlari nasil kisitlayarak, amacim icin en uygun hale getirebilecegimi arastiriyorum.
Ilk olarak NCBI&amp;rsquo;in Reference Sequence (Kaynak Dizi ya da Referans Sekans) &amp;ndash; RefSeq &amp;ndash; veritabaniyla basladim.</description>
    </item>
    
  </channel>
</rss>
