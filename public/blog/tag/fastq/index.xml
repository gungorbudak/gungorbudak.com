<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fastq on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/fastq/</link>
    <description>Recent content in fastq on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Aug 2012 08:48:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/fastq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kalite Satirinin Degerlendirilmesi - Quality Filter</title>
      <link>https://www.gungorbudak.com/blog/2012/08/09/kalite-satirinin-degerlendirilmesi/</link>
      <pubDate>Thu, 09 Aug 2012 08:48:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/08/09/kalite-satirinin-degerlendirilmesi/</guid>
      <description>Kirleten organizma (konaminant) analizi yapacak olan pipeline&amp;rsquo;i daha fazla gelistirmek, daha anlamli sonuclar elde etmek icin ilk adimlara (henuz fastq dosyasini isliyorken) kalite filtresi eklemeyi dusunduk. Boylece belirli bir esik degerinden dusuk okumalari daha o asamadan filtreleyerek daha guvenilir sonuclar elde elebilecegiz.
Bu kalite kontrolunu fastq dosyasinda her okumanin 4. satirini anlayarak yapacagiz. Bu 4. satir (aslinda okumanin dizileme kalite skoru), cesitli dizileme cihazlari tarafindan cesitli sekillerde yaziliyor (kodlaniyor) ve bu kodlamadan tekrar kalite skorunu elde ederek filtreleme uygulanmasi gerekiyor.</description>
    </item>
    
    <item>
      <title>Dorduncu Deneme Veriseti: Mus Musculus Genomu</title>
      <link>https://www.gungorbudak.com/blog/2012/08/03/dorduncu-deneme-veriseti-mus-musculus/</link>
      <pubDate>Fri, 03 Aug 2012 05:15:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/08/03/dorduncu-deneme-veriseti-mus-musculus/</guid>
      <description>Simdiye kadar ilk uc veriseti de insan genomuna aitti. Pipeline&amp;rsquo;i bu genomlarla deneyip, yer yer iyilestirmeler yaptim. Simdi ise baska organizmalarla da deneyip, daha fazla sonuc alip bunlari inceleyecegim ve gene gerekli iyilestirmeleri yapacagim.
Bu ilk farkli veriseti fareden geliyor. Mus Musculus tur adina ve ev faresi olarak yaygin isme sahip bu organizma da model organizma olarak calismalarda kullanildigi icin dizisi daha siklikla cikarilan diger bir organizma.
Bi dizilemeyi yapan, birlikte calistigim laboratuvardan cesitli BAM formatinda dizi dosyalari aldim.</description>
    </item>
    
    <item>
      <title>Yeni Verisetinin Incelenmesi</title>
      <link>https://www.gungorbudak.com/blog/2012/07/26/yeni-veri-setinin-incelenmesi/</link>
      <pubDate>Thu, 26 Jul 2012 08:32:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/26/yeni-veri-setinin-incelenmesi/</guid>
      <description>Pipeline&amp;rsquo;i tasarlama asamasinda deneme amacli kullandigim onceki verinin cok kotu olmasi sebebiyle yeni bir veriseti aldim. Elbette deneme asamasinda birden fazla, farkli karakterlerde verisetleri kullanmak yararlidir. Ancak onceki veriseti anlamli birkac sonuc veremeyecek kadar kotuydu diyebilirim. Ayrintilarina [buradan]({% post_url 2012-07-06-eslestirme-ve-eslesmeyen-okumalari %}) gozatabilirsiniz.
Yeni veriseti, gene bir insan genomu verisi ve BAM dosyasinin boyutu 1.8 GB ve icinde eslenebilen ve eslenemeyen okumalari bulunduruyordu. Ben bam2fastq araciyla hem bu BAM dosyasini FASTQ dosyasina cevirirken hem de eslenebilen okumalardan ayiklayarak 0.</description>
    </item>
    
    <item>
      <title>Tek FASTA Dosyasindan MegaBLAST&#39;i Calistirmak - Duzenli Ifadeler</title>
      <link>https://www.gungorbudak.com/blog/2012/07/23/tek-fasta-dosyasindan-megablast-calistirmak/</link>
      <pubDate>Mon, 23 Jul 2012 05:49:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/23/tek-fasta-dosyasindan-megablast-calistirmak/</guid>
      <description>Asagida MegaBLAST&amp;rsquo;i FASTA dosyasi okuyarak calistirmak ve sonuclari bir dizinde toplayabilmek amaciyla yazdigim Perl scripti ve onun aciklamasi var. Bu script tasarlamakta oldugum pipeline&amp;rsquo;in onemli bir parcasi. Bu script ilk yazdigim olan ve sadece bir FASTA dosyasi uzerinden tum okumalara ulasabilen script.
#!user/local/bin/perl $database = $ARGV[0]; $fasta = $ARGV[1]; #input file $sp = $ARGV[2]; #starting point $n = $ARGV[3] + $sp; if(!defined($n)){$n=12;} #set default number open FASTA, $fasta or die $!</description>
    </item>
    
    <item>
      <title>FASTQ&#39;dan FASTA&#39;ya Donusturme Perl Scripti</title>
      <link>https://www.gungorbudak.com/blog/2012/07/13/fastqdan-fastaya-donusturme-perl/</link>
      <pubDate>Fri, 13 Jul 2012 05:05:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/13/fastqdan-fastaya-donusturme-perl/</guid>
      <description>FASTQ ve FASTA formatlari aslinda ayni bilgiyi iceren ancak birinde sadece herbir dizi icin iki satir daha az bilginin bulundugu dosya formatlari. Projemde onemli olan diger bir farklari ise FASTA formatinin direkt olarak MegaBLAST arama yapilabilmesi. Iste bu yuzden, genetik dizilim yapan makinelerin olusturdugu FASTQ formatini FASTA&amp;rsquo;ya cevirmem gerekiyor. Ve bu script pipeline&amp;rsquo;in ilk adimi.
Aslinda deneme amacli aldigim genetk dizilimin, bana bunu ulastiran tarafindan eslestirmesinin yapilmadigi icin, bir on adim olarak bu eslestirmeyi yapmistim.</description>
    </item>
    
    <item>
      <title>Eşleştirme ve Eşleşmeyen Okumaları Çıkarma Sonuçları</title>
      <link>https://www.gungorbudak.com/blog/2012/07/06/eslestirme-ve-eslesmeyen-okumalari/</link>
      <pubDate>Fri, 06 Jul 2012 19:46:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/06/eslestirme-ve-eslesmeyen-okumalari/</guid>
      <description>Daha önce verinin sadece bir kısmı ile çalışıyordum ancak artık tamamıyla çalışacağım. Bu yüzden bana sıkıştırılmış halde gelen veriyi direkt çalışma klasörüme çıkardım ve onun üzerinden işlemler yaptım.
Başlangıç (FASTQ) dosyamın boyutu 2153988289 bayt (2 GB). Ve bwa aracılığıyla eşleştirmeden sonra toplamda 6004193 dizilim, ya da okuma, (sequences ya da reads) ortaya çıktı. Daha sonra eşleşmeyen okumaları çıkarmam sonrasında toplam okuma sayısı 551065 kadar azaldı ve 5493128 oldu. Yani verinin %9.</description>
    </item>
    
    <item>
      <title>BWA İle Eşleştirme (Mapping - Alignment)</title>
      <link>https://www.gungorbudak.com/blog/2012/07/06/bwa-ile-eslestirme-mapping-alignment/</link>
      <pubDate>Fri, 06 Jul 2012 19:40:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/06/bwa-ile-eslestirme-mapping-alignment/</guid>
      <description>Bunu daha önce yazmayı unutmuşum. Aslında bahsetmiştim ancak nasıl yapıldığına dair bir şeyler yazmamışım ayrıca örnek komutlar da eklememişim.
BWA elimizdeki (FASTQ formatındaki) DNA dizilimini, referans genomunu (projemde bu insan genomu) alarak bir .sai dosyası oluşturuyor. Bu dosya dizinin ve referans genomunun eşleşmesi ile ilgili bilgiler taşiyor ve bu bilgileri kullanarak eşleşmeyenleri ayırabiliyorum.
İlk olarak aşağıdaki komut ile .sai dosyamızı oluşturuyoruz.
bwa aln $NGSDATAROOT/bwa/human_genome37 ChIP_NoIndex_L001_R1_complete_filtered.fastq &amp;gt; complete_alignment.sai Oluşturduğumuz .sai dosyası çok da kullanışlı bir dosya değil, bu yüzden onu SAM dosyasına çevirerek, işlemlere devam ediyoruz.</description>
    </item>
    
    <item>
      <title>SAM Dosyası - BAM Dosyası - samtools</title>
      <link>https://www.gungorbudak.com/blog/2012/07/04/sam-dosyasi-bam-dosyasi-samtools/</link>
      <pubDate>Wed, 04 Jul 2012 20:36:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/04/sam-dosyasi-bam-dosyasi-samtools/</guid>
      <description>Aslında programlamam gereken pipeline direkt olarak eşleşmeyen okumalar üzerinden analizler yapacak. Ancak böyle bir veri bulamadiığım için, elimdeki tek veri eşleşen ve eşleşmeyen okumaları içerdiği için önce eşleşenlerden kurtulmam gerekti.
Bunu daha önce de belirttiğim gibi bwa eşleştiricisi (aligner - mapper) ile yapıyorum. bwa bir dizi işlemden sonra SAM dosyası oluşturuyor ancak benim FASTQ dosyasına ihtiyacım var. Bunun için SAM dosyasını samtools1 ile benzer bir format olan BAM dosyasına çevirip, daha sonra da bam2fastq2 aracı ile FASTQ dosyamı elde edeceğim.</description>
    </item>
    
    <item>
      <title>İlk Adım: Eşleşmeyen Okumaları Elde Etmek</title>
      <link>https://www.gungorbudak.com/blog/2012/07/04/ilk-adim-eslesmeyen-okumalari-elde/</link>
      <pubDate>Wed, 04 Jul 2012 19:48:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/04/ilk-adim-eslesmeyen-okumalari-elde/</guid>
      <description>Projemin ilk kısmı daha önce bahsettiğim gibi eşleşmeyen okumaları (unmapped reads) FASTQ dosyasından çıkarmak. Böylece, daha sonraki analizler için elimdeki ihtiyacım olmayan dizileri çıkarmış ve bu analizlerdeki iş yükünü azaltmış oluyorum.
Başından beri hedefim, tüm projeyi adım adım gerçekleştiren bir pipeline tasarlamak olduğu için bu işlemi bir Perl scripti ile yapacağım. Bu script pipeline&amp;rsquo;in ilk scripti ve laboratuvardan gelecek ham (raw) FASTQ formatındaki verinin girdi (input) olarak kullanılacağı yer. Aslında bu scripte ihtiyacım olmayacak, sadece elimdeki verinin eşlenebilen verileri de içermesi sebebiyle bu adımı ekledim.</description>
    </item>
    
    <item>
      <title>Kontaminant (Kirletici) Analizi Projesi</title>
      <link>https://www.gungorbudak.com/blog/2012/06/27/kontaminant-kirletici-analizi-projesi/</link>
      <pubDate>Wed, 27 Jun 2012 11:24:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/06/27/kontaminant-kirletici-analizi-projesi/</guid>
      <description>Başlangıç olarak, araçlara, programlama diline, kısacası biyoenformatiğe alışabilmem için bana verilen bu ufak projeyi ayrıntılı olarak anlatacağım.
Biliyoruz ki, laboratuvar çalışmalarımızda ne kadar önlemeye çalışsak da kontaminant riski hep bulunuyor. Bunu ne kadar aza indirsek o kadar iyi, ki daha sonra bunun miktarını bulup, bunun üzerinden sonucumuzun bir başka değerlendirmesini de yapabiliriz. İşte bunu bulmak için bir yöntem, DNA analizi. Çalıştığınız örneğinizin DNA&amp;rsquo;sı dizileniyor ve bu DNA çeşitli programlarla analiz edilip, kirleten organizmaları DNA&amp;rsquo;larından ortaya çıkarabiliyoruz</description>
    </item>
    
    <item>
      <title>FASTQ Formatı - FASTQ Dosyası</title>
      <link>https://www.gungorbudak.com/blog/2012/06/25/fastq-format-fastq-dosyasi/</link>
      <pubDate>Mon, 25 Jun 2012 11:01:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/06/25/fastq-format-fastq-dosyasi/</guid>
      <description>Bugün programı oluştururken kullanacağım &amp;ldquo;test&amp;rdquo; dizilimini aldım. İki adet FASTQ dosyasından oluşuyor, her biri sıkıştırılmış ama buna rağmen boyutları 6 GB civarı. Ben elbette çok zaman kaybetmek istemediğim için bu dosyalardan birinin sadece bir kısmını kullanacağım.
Amacım, bu FASTQ dosyalarındaki eşleşebilen okumaları BWA aracı ile bularak, daha sonra onları çıkarmak. Ve kalan eşleşemeyen okumaları MegaBLAST aracının anlayabileceği bir dilde (FASTA formatında) kaydetmek.
Bu arada tüm projeyi bir Unix bilgisayarda hazırladığım için birçok komut öğreniyorum, daha sonra bunları ayrıca yazmaya çalışacağım.</description>
    </item>
    
  </channel>
</rss>
