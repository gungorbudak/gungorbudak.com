<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r programming on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/r-programming/</link>
    <description>Recent content in r programming on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 07 Aug 2018 10:00:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/r-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convert Gene Symbols to Entrez IDs in R</title>
      <link>https://www.gungorbudak.com/blog/2018/08/07/convert-gene-symbols-to-entrez-ids-in-r/</link>
      <pubDate>Tue, 07 Aug 2018 10:00:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2018/08/07/convert-gene-symbols-to-entrez-ids-in-r/</guid>
      <description>Bioinformatics studies usually includes gene symbols as identifiers (IDs) as they are more recognizable comparing to other IDs such as Entrez IDs. However, certain analyses (tools) may not use gene symbols as there are usually more than one symbol so it is more difficult to implement a method to work with gene symbols. In such cases, you may need to do a conversion which is very common thing to do in bioinformatics.</description>
    </item>
    
    <item>
      <title>Computing Significance of Overlap between Two Sets using Hypergeometric Test</title>
      <link>https://www.gungorbudak.com/blog/2016/05/25/computing-significance-of-overlap/</link>
      <pubDate>Wed, 25 May 2016 13:31:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2016/05/25/computing-significance-of-overlap/</guid>
      <description>There are many cases where we have two sets (e.g. under two different conditions) of things such as transcripts, genes or proteins and we want to compute the significance of the overlap between them. Hypergeometric test is very simple and widely used option for such cases.
I&amp;rsquo;ll use the phyper function in R but you can use the same idea in SciPy (Python).
Let&amp;rsquo;s say you have from 200 genes (A);</description>
    </item>
    
    <item>
      <title>Mann Whitney U Test (Wilcoxon Rank-Sum Test) Javascript Implementation</title>
      <link>https://www.gungorbudak.com/blog/2016/01/16/mann-whitney-u-test-wilcoxon-rank-sum-test-javascript/</link>
      <pubDate>Sat, 16 Jan 2016 03:58:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2016/01/16/mann-whitney-u-test-wilcoxon-rank-sum-test-javascript/</guid>
      <description>Currently Javascript is really poor in statistical methods compared to Python (SciPy) and R. There are several efforts to fill this gap, most notably from jStat. However, still many functions, distributions and tests are missing in this library. In one of my projects, I had to implement a Javascript version of Mann Whitney U test (or also called Wilcoxon rank-sum test). Here, I&amp;rsquo;m giving a link to its source code and describing how it works.</description>
    </item>
    
    <item>
      <title>MiClip 1.3 Installation</title>
      <link>https://www.gungorbudak.com/blog/2015/10/29/miclip-13-installation/</link>
      <pubDate>Thu, 29 Oct 2015 23:18:04 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2015/10/29/miclip-13-installation/</guid>
      <description>MiClip is a CLIP-seq data peak calling algorithm implemented in R but currently it doesn’t show up in the CRAN but you can obtain it from the archive and install from the source or tar.gz file.
Download the tar.gz file:
wget https://cran.r-project.org/src/contrib/Archive/MiClip/MiClip_1.3.tar.gz Start R:
R Install dependencies:
install.packages(&amp;#34;moments&amp;#34;) install.packages(&amp;#34;VGAM&amp;#34;) Finally install MiClip 1.3:
install.packages(&amp;#34;MiClip_1.3.tar.gz&amp;#34;, repos = NULL, type=&amp;#34;source&amp;#34;) Then you can test it by loading the package and viewing its help file.</description>
    </item>
    
    <item>
      <title>How to Get Path to or Directory of Current Script in R</title>
      <link>https://www.gungorbudak.com/blog/2015/05/06/how-to-get-path-to-or-directory-of-current-script/</link>
      <pubDate>Wed, 06 May 2015 22:58:18 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2015/05/06/how-to-get-path-to-or-directory-of-current-script/</guid>
      <description>Use following code to get the path to or directory of current (running) script in R:
scr_dir &amp;lt;- dirname(sys.frame(1)$ofile) scr_path &amp;lt;- paste(scr_dir, &amp;#34;script.R&amp;#34;, sep=&amp;#34;/&amp;#34;) Taken from SO </description>
    </item>
    
    <item>
      <title>How to Get (or Load) NCBI GEO Microarray Data into R using GEOquery Package from Bioconductor</title>
      <link>https://www.gungorbudak.com/blog/2015/05/06/how-to-get-or-load-ncbi-geo-microarray/</link>
      <pubDate>Wed, 06 May 2015 16:22:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2015/05/06/how-to-get-or-load-ncbi-geo-microarray/</guid>
      <description>R, especially with lots of Bioconductor packages, provides nice tools to load, manage and analyze microarray data. If you are trying to load NCBI GEO data into R, use GEOquery package. Here, I&amp;rsquo;ll describe how to start with it and probably in my future posts I&amp;rsquo;ll mention more.
Installation
source(&amp;#34;http://bioconductor.org/biocLite.R&amp;#34;) biocLite(&amp;#34;GEOquery&amp;#34;) Usage
library(GEOquery) gds &amp;lt;- getGEO(&amp;#34;GDS5072&amp;#34;) or
library(GEOquery) gds &amp;lt;- getGEO(filename=&amp;#34;path/to/GDS5072.soft.gz&amp;#34;) getGEO function return a complex class type GDS object which contains the complete dataset.</description>
    </item>
    
    <item>
      <title>Plotting Expression Curves for Experimental Data</title>
      <link>https://www.gungorbudak.com/blog/2013/08/27/plotting-expression-curves-for/</link>
      <pubDate>Tue, 27 Aug 2013 11:08:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2013/08/27/plotting-expression-curves-for/</guid>
      <description>As I can plot expression curves for in silico data. I moved on experimental data which is more complex and larger. This data is the result of RPPA experiments on different breast cancer cell lines and it includes protein abundance measurements for about 45 phophoproteins. These phosphoproteins are treated with different inhibitors and stimuli and by comparing their expressions, I will try to infer relations between them.
Before moving on inferring part, I want to have a script that can plot the graphs so that I can see particular results for specific cases.</description>
    </item>
    
    <item>
      <title>Experimental Data Optimization for Network Inference</title>
      <link>https://www.gungorbudak.com/blog/2013/08/14/experimental-data-optimization-for/</link>
      <pubDate>Wed, 14 Aug 2013 10:41:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2013/08/14/experimental-data-optimization-for/</guid>
      <description>As I mentioned in my previous post, experimental data from the challenge has missing data values that create problems during analyses. To solve it, first thing I did was to optimize data, which includes detecting missing conditions and putting NAs for data values and sorting them if necessary.
I wrote two functions in the script. First one ranks the data according to the fashion and sorts it based on these ranks.</description>
    </item>
    
    <item>
      <title>Some String Functions in R, String Manipulation in R</title>
      <link>https://www.gungorbudak.com/blog/2013/08/08/some-string-functions-in-r-string/</link>
      <pubDate>Thu, 08 Aug 2013 10:43:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2013/08/08/some-string-functions-in-r-string/</guid>
      <description>I have programmed with Perl, Python, and PHP before, and string manipulation was more direct and easier in them than in R. But still there are useful functions for string manipulation in R. I&amp;rsquo;m not an expert in R but I&amp;rsquo;ve been dealing with it for a while and I&amp;rsquo;ve learned some good functions for this purpose.
Concatenate strings
Concatenation is done with paste function. It gets concatenated strings as arguments separated bu comma and also separator character(s).</description>
    </item>
    
    <item>
      <title>Network Inference DREAM Breast Cancer Challenge</title>
      <link>https://www.gungorbudak.com/blog/2013/06/27/network-inference-dream-breast-cancer/</link>
      <pubDate>Thu, 27 Jun 2013 08:09:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2013/06/27/network-inference-dream-breast-cancer/</guid>
      <description>The inference of causal edges are described as the change on a node seen after the intervention of another node. If the curves obtained over time overlap (under intervention or no intervention), then there is no relation. Otherwise, we can draw an edge between those nodes and according to the level, up or down, the edge will be activating or inhibiting. These causal edges are context-specific so in different cell line data, we may have different relations.</description>
    </item>
    
  </channel>
</rss>
