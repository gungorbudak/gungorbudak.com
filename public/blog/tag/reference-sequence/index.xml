<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reference sequence on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/reference-sequence/</link>
    <description>Recent content in reference sequence on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 23 Jul 2012 04:19:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/reference-sequence/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Duzenli Ifadeler ile Tur Ismini Elde Etmek</title>
      <link>https://www.gungorbudak.com/blog/2012/07/23/duzenli-ifadeler-ile-tur-ismini-elde/</link>
      <pubDate>Mon, 23 Jul 2012 04:19:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/23/duzenli-ifadeler-ile-tur-ismini-elde/</guid>
      <description>Projemin sonunda kullaniciya olasi kirleten organizmalarin adlarini (Latince tur isimleri) gosterecegim icin, MegaBLAST sonuclarindaki erisim numaralarini (accession number) kullanarak her dizi icin organizma adlarini elde etmem gerekiyor. Sequence Retrival System (SRS) adinda, HUSAR sunucularinda bulunan baska bir sistem ile bunu yapabiliyorum.
SRS&amp;rsquo;ten organizma adini ogrenebilmem icin Unix komut satirinda &amp;ldquo;getz&amp;rdquo; komutuyla birlikte veritabani ismi, erisim numarasi ve ogrenmek istedigim alani yazmam yetiyor. Asagida, bu isi yapabilen ornek bir kod bulabilirsiniz.</description>
    </item>
    
    <item>
      <title>Veritabani Secimi</title>
      <link>https://www.gungorbudak.com/blog/2012/07/13/veritabani-secimi/</link>
      <pubDate>Fri, 13 Jul 2012 09:29:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/13/veritabani-secimi/</guid>
      <description>Bu projedeki amacim olasi kirleten organizmalari (kontaminantlari) bulmak. Dolayisiyla genis bir veritabanina ihtiyacim var. Ancak veritabanini genis tutmak boyle bir avantaj sagliyorken, her dizi icin o veritabaninda arama yapmak oldukca fazla bilgisayar gucu ve zaman gerektiriyor. Bu yuzden projemi gelistirirken, cesitli veritabanlarini da inceliyorum. Ve ayrica bunlari nasil kisitlayarak, amacim icin en uygun hale getirebilecegimi arastiriyorum.
Ilk olarak NCBI&amp;rsquo;in Reference Sequence (Kaynak Dizi ya da Referans Sekans) &amp;ndash; RefSeq &amp;ndash; veritabaniyla basladim.</description>
    </item>
    
  </channel>
</rss>
