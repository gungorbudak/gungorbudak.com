<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hash on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/hash/</link>
    <description>Recent content in hash on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Aug 2012 09:15:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/hash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SRS&#39;de Coklu Arama Yapmak</title>
      <link>https://www.gungorbudak.com/blog/2012/08/09/srsde-coklu-arama-yapmak/</link>
      <pubDate>Thu, 09 Aug 2012 09:15:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/08/09/srsde-coklu-arama-yapmak/</guid>
      <description>Inceleme yapan scriptin en son hali, oncekilere gore daha fazla okuma inceliyor oldugu icin her okuma icin SRS uzerinde isim aramak oldukca zaman alan bir islemdi. Oyle ki, son inceleme 4 gun surdu.
Bunu azaltmak icin inceleme scriptini tamamen degistirdim. Oncelikle her zaman oldugu gibi esik degerini gecenleri aliyor ama direkt bunlarin ID numaralarini bir dizide (array) listeliyorum. Daha sonra bu listenin herbir elemanini boru karakteri ile ayirarak bir string haline getiriyorum.</description>
    </item>
    
    <item>
      <title>MegaBLAST Sonuclarini Incelemek - Parsing</title>
      <link>https://www.gungorbudak.com/blog/2012/08/09/megablast-sonuclarini-incelemek-parsing/</link>
      <pubDate>Thu, 09 Aug 2012 09:14:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/08/09/megablast-sonuclarini-incelemek-parsing/</guid>
      <description>Pipeline&amp;rsquo;da son asama, aranan dizilerin urettigi ciktilari baska bir script ile incelemek. Bu islemle herbir megablast dosyasi okunuyor, ve dizilerin name, identity, overlapping length gibi parametrelerinin degerleri saklanarak amaca yonelik sekilde ekrana yazdiriliyor.
Projemde HUSAR paketinde bulunan ve yukarida bahsettigim alanlari bana dizi olarak donduren Inslink adinda bir parser kullaniyorum. Bu parserin yaptigi tek sey, dosyayi okumak ve dosyadaki istenen alanlarin degerlerini saklamak.
Daha sonra ben bu saklanan degerleri, koda eklemeler yaparak gosteriyorum ve birkac ek kod ile de ihtiyacim olan anlamli sonuclar gosteriyorum.</description>
    </item>
    
    <item>
      <title>Inceleme Sonuclarini &#34;Ambiguous&#34; Olarak Ayirmak</title>
      <link>https://www.gungorbudak.com/blog/2012/08/02/inceleme-sonuclarini-ambiguous-olarak/</link>
      <pubDate>Thu, 02 Aug 2012 06:03:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/08/02/inceleme-sonuclarini-ambiguous-olarak/</guid>
      <description>Cesitli veritabanlarina karsi yaptigim aramalardan aldigim sonuclari incelerken, bunlari cesitli esik degerleri ile degerlendirmek ile beraber belirlenen esik degerlerinin uzerinde ya da altinda olan hitleri &amp;ldquo;Ambiguous&amp;rdquo; (belirsiz, cok anlamli) ya da &amp;ldquo;Unique&amp;rdquo; (essiz, tek) olarak ayirarak daha da anlamli hale getirmeye calisiyorum.
&amp;ldquo;Ambiguous&amp;rdquo; olarak, her bir megablast dosyasinda esik degerlerine uygun ancak birden fazla farkli organizmayi iceren hitleri etiketliyorum. Eger her esik degerine uygun hit, tek bir dosya icinde her zaman ayni organizmaya ait ise bu durumda yaptigim sey onu &amp;ldquo;unique&amp;rdquo; olarak etiketlemek.</description>
    </item>
    
  </channel>
</rss>
