<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bioconductor on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/bioconductor/</link>
    <description>Recent content in bioconductor on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 06 May 2015 16:22:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/bioconductor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Get (or Load) NCBI GEO Microarray Data into R using GEOquery Package from Bioconductor</title>
      <link>https://www.gungorbudak.com/blog/2015/05/06/how-to-get-or-load-ncbi-geo-microarray/</link>
      <pubDate>Wed, 06 May 2015 16:22:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2015/05/06/how-to-get-or-load-ncbi-geo-microarray/</guid>
      <description>R, especially with lots of Bioconductor packages, provides nice tools to load, manage and analyze microarray data. If you are trying to load NCBI GEO data into R, use GEOquery package. Here, I&amp;rsquo;ll describe how to start with it and probably in my future posts I&amp;rsquo;ll mention more.
Installation
source(&amp;#34;http://bioconductor.org/biocLite.R&amp;#34;) biocLite(&amp;#34;GEOquery&amp;#34;) Usage
library(GEOquery) gds &amp;lt;- getGEO(&amp;#34;GDS5072&amp;#34;) or
library(GEOquery) gds &amp;lt;- getGEO(filename=&amp;#34;path/to/GDS5072.soft.gz&amp;#34;) getGEO function return a complex class type GDS object which contains the complete dataset.</description>
    </item>
    
    <item>
      <title>Progress on Network Inference Sub-Challenge</title>
      <link>https://www.gungorbudak.com/blog/2013/07/02/progress-on-network-inference-sub/</link>
      <pubDate>Tue, 02 Jul 2013 10:13:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2013/07/02/progress-on-network-inference-sub/</guid>
      <description>This sub-challenge has several requirements:
Directed and causal edges on the models (32 models - 4 cell lines × 8 stimuli) Edges should be scored (normalizing to range between 0 and 1) that will show confidence Nodes will be phosphoproteins from the data Prior knowledge network (that can be constructed using pathway databases) is allowed to be used (actually this is a must for some network inference tools) First thing was to look for existing tools.</description>
    </item>
    
  </channel>
</rss>
