<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blast on Güngör Budak</title>
    <link>https://www.gungorbudak.com/blog/tag/blast/</link>
    <description>Recent content in blast on Güngör Budak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Jul 2012 07:48:00 +0300</lastBuildDate><atom:link href="https://www.gungorbudak.com/blog/tag/blast/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Birden Fazla Dizi Dosyalarindan MegaBLAST&#39;i Calistirmak</title>
      <link>https://www.gungorbudak.com/blog/2012/07/26/birden-fazla-dizi-dosyalarindan-megablast-calistirmak/</link>
      <pubDate>Thu, 26 Jul 2012 07:48:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/26/birden-fazla-dizi-dosyalarindan-megablast-calistirmak/</guid>
      <description>Asagidaki scripti, pipeline&amp;rsquo;in MegaBLAST aramasini daha hizli yapabilmek icin dusundugumuz bir teknige uygun olabilmesi icin yazdim. Yaptigi sey, her okuma icin olusturulmus ve formatlanmis dizi dosyalarini kullanarak veritabanlarinda belirtilen baslangic noktasi ve okuma sayisi ile arama yapmak.
#!user/local/bin/perl $database = $ARGV[0]; $dir = $ARGV[1]; #directory for sequences $sp = $ARGV[2]; #starting point $n = $ARGV[3] + $sp; while (1) { system(&amp;#34;blastplus -programname=megablast $dir/read_$sp.seq $database -OUTFILE=read_$sp.megablast -nobatch -d&amp;#34;); $sp++; last if ($sp == $n); } Burada her sey gercekten cok basit bir programlama ile isliyor.</description>
    </item>
    
    <item>
      <title>Bir MegaBLAST Ciktisi Icerigi - RefSeq Veritabani</title>
      <link>https://www.gungorbudak.com/blog/2012/07/19/bir-megablast-ciktisi-icerigi-refseq/</link>
      <pubDate>Thu, 19 Jul 2012 09:35:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/07/19/bir-megablast-ciktisi-icerigi-refseq/</guid>
      <description>Asagida, deneme FASTA dosyasini refseq_genomic veritabaninda arayarak elde ettigim dosyadan, bir hitin ayrintilarini goruyoruz.
&amp;gt;&amp;gt;&amp;gt;&amp;gt;refseq_genomic_complete3: AC_000033_0310 Continuation (311 of 1357) of AC_000033 from base 31000001 (AC_000033 Mus musculus strain mixed chromosome 11, alternate assembly Mm_Celera, whole genome shotgun sequence. 2/2012) Length = 110000 Score = 115 bits (58), Expect = 4e-22 Identities = 74/79 (93%), Gaps = 2/79 (2%) Strand = Plus / Minus Query: 1 ctctctctgtct-tctctctctctctgtctctctctctttctctctcttctctctctctc 59 |||||||||||| ||| ||||||||| ||||||||||| ||||||||||||||||||||| Sbjct: 89773 ctctctctgtctgtctttctctctctctctctctctctctctctctcttctctctctctc 89714 Query: 60 tttctctctgccctctctc 78 ||||||||| ||||||||| Sbjct: 89713 tttctctct-ccctctctc 89696 Ayrintilarda, ilk olarak &amp;gt;&amp;gt;&amp;gt;&amp;gt; karakterleriyle hit ile ilgili baslik bilgisi veriyor.</description>
    </item>
    
    <item>
      <title>MegaBLAST - Dizilerdeki Benzerlikleri Bulma Aracı</title>
      <link>https://www.gungorbudak.com/blog/2012/06/28/megablast-dizilerdeki-benzerlikleri/</link>
      <pubDate>Thu, 28 Jun 2012 10:49:00 +0300</pubDate>
      
      <guid>https://www.gungorbudak.com/blog/2012/06/28/megablast-dizilerdeki-benzerlikleri/</guid>
      <description>MegaBLAST, HUSAR paketinde bulunan, BLAST (Basic Local Alignment Search Tool) paketinin bir parçası. Ayrıca BLASTN&amp;rsquo;in bir değişik türü. MegaBLAST uzun dizileri BLASTN&amp;rsquo;den daha etkili bir şekilde işliyor ve hem de çok daha hızlı işlem yapiyor ancak daha az duyarlı. Bu yüzden benzer dizileri geniş veri tabanlarında aramaya çok uygun bir araç.
Yazacağım program çoklu dizilim barındıran FASTA dosyasını alacak ve megablast komutunu çalıştıracak. Daha sonra da her okuma için bir .</description>
    </item>
    
  </channel>
</rss>
